syntax = "proto3";
package authpb;

import "gogoproto/gogo.proto";
import "github.com/catyguan/csf/basepb/base.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;

// User is a single entry in the bucket authUsers
message User {
  bytes name = 1;
  bytes password = 2;
  repeated string roles = 3;
}

// Permission is a single entity
message Permission {
  enum Type {
    READ = 0;
    WRITE = 1;
    READWRITE = 2;
  }
  Type permType = 1;

  bytes key = 2;
  bytes range_end = 3;
}

// Role is a single entry in the bucket authRoles
message Role {
  bytes name = 1;

  repeated Permission keyPermission = 2;
}

message AuthenticateResponse {
  basepb.ResponseHeader header = 1;
  // token is an authorized token that can be used in succeeding RPCs
  string token = 2;
}

message AuthUserAddRequest {
  string name = 1;
  string password = 2;
}

message AuthUserAddResponse {
  basepb.ResponseHeader header = 1;
}

message AuthUserDeleteRequest {
  // name is the name of the user to delete.
  string name = 1;
}

message AuthUserDeleteResponse {
  basepb.ResponseHeader header = 1;
}

message AuthUserChangePasswordRequest {
  // name is the name of the user whose password is being changed.
  string name = 1;
  // password is the new password for the user.
  string password = 2;
}

message AuthUserChangePasswordResponse {
  basepb.ResponseHeader header = 1;
}

message AuthUserGrantRoleRequest {
  // user is the name of the user which should be granted a given role.
  string user = 1;
  // role is the name of the role to grant to the user.
  string role = 2;
}

message AuthUserGrantRoleResponse {
  basepb.ResponseHeader header = 1;
}

message AuthUserGetRequest {
  string name = 1;
}

message AuthUserGetResponse {
  basepb.ResponseHeader header = 1;

  repeated string roles = 2;
}

message AuthUserRevokeRoleRequest {
  string name = 1;
  string role = 2;
}

message AuthUserRevokeRoleResponse {
  basepb.ResponseHeader header = 1;
}

message AuthRoleAddRequest {
  // name is the name of the role to add to the authentication system.
  string name = 1;
}

message AuthRoleAddResponse {
  basepb.ResponseHeader header = 1;
}

message AuthRoleGrantPermissionRequest {
  // name is the name of the role which will be granted the permission.
  string name = 1;
  // perm is the permission to grant to the role.
  Permission perm = 2;
}

message AuthRoleGrantPermissionResponse {
  basepb.ResponseHeader header = 1;
}

message AuthRoleGetRequest {
  string role = 1;
}

message AuthRoleGetResponse {
  basepb.ResponseHeader header = 1;

  repeated authpb.Permission perm = 2;
}

message AuthRoleRevokePermissionRequest {
  string role = 1;
  string key = 2;
  string range_end = 3;
}

message AuthRoleRevokePermissionResponse {
  basepb.ResponseHeader header = 1;
}

message AuthRoleDeleteRequest {
  string role = 1;
}

message AuthRoleDeleteResponse {
  basepb.ResponseHeader header = 1;
}

message AuthUserListRequest {
}

message AuthUserListResponse {
  basepb.ResponseHeader header = 1;

  repeated string users = 2;
}

message AuthRoleListRequest {
}

message AuthRoleListResponse {
  basepb.ResponseHeader header = 1;

  repeated string roles = 2;
}